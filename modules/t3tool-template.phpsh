<?php
/**
 * t3tool-sqlq.phpsh
 *
 * Handles the command "t3tool sqlq <sql>".
 *
 * @package t3tool
 * @author Lars KÃ¸ie
 *
 */

/**
 * @param $args
 */
function t3tool_template_handlecmd($args)
{

    $cmd = array_shift($args);
    $id = trim(strtolower($args[0]));
    $where = ' and not sys_template.deleted';
    if ($id) {
        $where .= " and (sys_template.title like '$id' or sys_template.uid='$id') ";
    }

    switch ($cmd) {

        #
        # Template list
        #
        case 'list' :
        case 'find' :
            $tpls = sql_get_rows("
      select sys_template.uid, sys_template.title, sys_template.hidden, pages.uid as pid, pages.title as pageTitle, 'sys_template' as _table
      from sys_template
      left join pages on pages.uid=sys_template.pid
      where 1 " . $where . " order by uid asc");
            if ($cmd == 'find') {
                return showRecordsInPageTree($tpls);
            } else {
                return sendAsFlatTable($tpls);
            }
            break;

        #
        # Search for template
        #
        case 'show' :
            if (!trim($id)) {
                return ("Usage : t3tool template show <title or uid>. Case insensitive.\n");
            }
            $tpl = getSingleRecordByString("sys_template", $id, array('title'));
            return sendRecordAsTable($tpl);
            break;

        #
        # Set a TS value on a pid.
        # TODO : find some way to move this to t3tool-ts.phpsh
        #
        case 'set' :
            $key = $args[0];
            $value = $args[1];
            $pid = $args[2];

            if (!trim($pid)) {
                output_usage("Usage : t3tool template set <key> <value> <pid> \n");
            }

            $page = getSingleRecordByString('pages', $pid);
            $pid = $page['uid'];

            output_cmd("Setting '$key' to '$value' on page '" . $page['title'] . "'... ");

            $line = "\n$key = $value\n";

            sql_query("update sys_template set config=concat(config, '$line') where pid=$pid and not hidden order by sorting limit 1");
            if (!sql_affected_rows())
                output_fail("No templates on page. Nothing done.");

            output_ok();
            break;

        #
        # Set a TS value on a pid.
        # TODO : find some way to move this to t3tool-ts.phpsh
        #
        case 'const-set' :
            $key = $args[0];
            $value = $args[1];
            $pid = $args[2];

            if (!trim($pid)) {
                output_usage("Usage : t3tool template const-set <key> <value> <pid> \n");
            }

            $page = getSingleRecordByString('pages', $pid);
            $pid = $page['uid'];

            output_cmd("Setting '$key' to '$value' on page '" . $page['title'] . "'... ");

            $line = "\n$key = $value\n";

            sql_query("update sys_template set constants=concat(constants, '$line') where pid=$pid and not hidden order by sorting limit 1");
            if (!sql_affected_rows())
                output_fail("No templates on page. Nothing done.");

            output_ok();
            break;


        default :
            return ("  t3tool template list
    List all templates.
  t3tool template show <uid or title>
    Show single template with all fields.

");


    }
}

function t3tool_template_usage_short()
{
    return ("Template commands:
  t3tool template list - List all templates.
  t3tool template show - Show single template with all fields.
");

}

function t3tool_template_cmdaliases()
{
    return array(
        'tpl' => 'template',
    );
}

/**
 * @return array
 */
function t3tool_template_completion()
{
    return array(
        'template' => array(
            'find' => 1,
            'list' => 1,
            'set' => 1,
            'const-set' => 1,
            'show' => 1
        ),
    );

}