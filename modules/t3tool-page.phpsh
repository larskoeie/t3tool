<?php
  /**
   * t3tool-page.phpsh
   *
   * Handles the commands "t3tool page ...".
   *
   * @package t3tool
   * @author Lars KÃ¸ie
   *
   */

  /**
   * @param $args
   *
   */
  function t3tool_page_handlecmd($args) {

    $cmd = array_shift($args);
    $title = trim($args[0]);
    $where = " and (title like '$title' or uid='$title')";

    switch ($cmd) {

      //
      // Show a single page.
      //
      case 'show' :
        if (!trim($title)) {
          return("Usage : t3tool page show <title or uid>. Case insensitive.\n");
        }
        $page = getSingleRecordByString('pages', $title, array('title'));
        return sendRecordAsTable($page);
        break;

      //
      // Add a page on pid arg. New page is hidden.
      //
      case 'add' :
        $pid = $args[1];
        if (!trim($pid)) {
          return ("Usage : t3tool page add <title> <parent's title or pid>");
        }
        if (!is_int($pid)) {
          $pages = sql_get_rows("select uid from pages where title like '%ppid%'");
          if (sizeof($pages) == 1) {
            $pid = $pages[0]['pid'];
          }
        }
        sql_query("insert into pages (hidden, title, pid) values (1, '$title', '$pid')");
        break;

      //
      // Delete a single page.
      //
      case 'delete' :
        if (!trim($title)) {
          return("Usage : t3tool page delete <title or uid>. Case insensitive.");
        }
        sql_query("update pages set deleted=1 where " . $where . " limit 1");
        if (!sql_affected_rows()) {
          return("Page not found.");
        }

        break;

      //
      // Hide (disable) a page.
      //
      case "hide" :
      case "disable" :
        if (!trim($title)) {
          return("Usage : t3tool page hide <title or uid>. Case insensitive.");
        }
        sql_query("update pages set hidden=1 where 1 " . $where . " limit 1");
        if (!sql_affected_rows()) {
          return("Page not found.");
        }
        break;

      //
      // Unhide (enable) page.
      //
      case "unhide" :
      case "enable" :
        if (!trim($title)) {
          return("Usage : t3tool page unhide <title or uid>. Case insensitive.");
        }
        sql_query("update pages set hidden=0 where 1 " . $where . " limit 1");
        if (!sql_affected_rows()) {
          return("Page not found.");
        }
        break;

      //
      case 'rootline' :
        $a = array();
        if (!$args[0]) {
          return("Usage : t3tool rootline <uid or page-title>\n  Show the rootline of page\n");
        }
        $res = sql_query('select title, uid, pid, deleted, hidden from pages where uid=' . intval($args[0]) . ' or title like "' . $args[0] . '"');
        if ($row = sql_fetch_array($res)) {
          $a = getRootline($row['uid']);
          return sendAsFlatTable($a, TRUE);
        }
        break;

      //
      // Build a comma separated list of pages under a pid.
      //
      case 'pidlist' :
        if (!$title) {
          return("Usage: t3tool page pidlist <pid>");
        }

        $pids = getPidList($title);
         "There are " . count($pids) . " pages:\n";
        echo (implode(",", $pids));
        echo "\n\n";
        break;


    }
  }

function t3tool_page_usage_short () {
  return "Page commands:
  t3tool page add - Add a subpage
  t3tool page enable - Enable a page
  t3tool page disable - Disable a page
  t3tool page delete - Delete a page
  t3tool page pidlist - Get a list of pids under a page
  ";

}

  function t3tool_page_usage_long () {
    return "Page commands:
  t3tool page add <title> <title or pid of parent page>
  t3tool page enable <title or uid>
  t3tool page disable <title or uid>
  t3tool page delete <title or uid>
  t3tool page pidlist [page uid]
    Comma separated list of supplied page id and all subpages infinitely recursively.
    ";

  }

  /**
   * @return array
   */
  function t3tool_page_completion () {
    return array(

    );

  }