<?php
	/**
	 * t3tool-user.phpsh
	 *
	 * Handling of backend users and backend user groups.
	 *
	 * @package t3tool
	 * @author Lars KÃ¸ie
	 *
	 */

	/**
	 * @param $args
	 */
	function t3tool_registry_handlecmd($args) {
		$cmd = strtolower(array_shift($args));
		$key = trim(strtolower($args[0]));
		$parts = explode('/', $key);
		if (sizeof($parts) > 1) {
			$namespace = $parts[0];
			$key = $parts[1];
		}

		switch ($cmd) {
			/**
			 *
			 */
			case 'list' :
				$sql = "select * from sys_registry where entry_key like '%$key%'";
				if ($namespace) {
					$sql .= " and entry_namespace='$namespace'";
				}
				$records = t3tool_get_records_by_string('sys_registry', $key, array('entry_namespace', 'entry_key'));
				if (!$records) {
					return 'No records';
				}
				return sendAsFlatTable($records);

				break;

			/**
			 *
			 */
			case 'get' :
				if (!$key) {
					return ("Usage:\n  t3tool registry get <key>\n  t3tool registry get <namespace/key>\n");
				}
				$sql = "select entry_value from sys_registry where entry_key like '%$key%'";
				if ($namespace) {
					$sql .= " and entry_namespace='$namespace'";
				}
				$record = sql_get_row($sql);
				if (!$record) {
					return 'No match';
				}
				$value = unserialize($record['entry_value']);
				var_dump($value);

				break;

			/**
			 *
			 */
			case 'set' :
				$value = $args[1];
				if (!$key) {
					return ("Usage:\n  t3tool registry set <namespace/key> <value>\n");
				}
				if (!$namespace) {
					return ('');
				}
				if (!$value) {
					return 'No value';
				}
				// check for existence
				$sql = "select entry_value from sys_registry where entry_key like '%$key%' and entry_namespace='$namespace'";

				$record = sql_get_row($sql);
				if (!$record) {
					return 'No match';
				}
				$value = serialize($value);
				$sql = "update sys_registry set entry_value='$value' where entry_key = '$key' and entry_namespace='$namespace'";

				print_r($sql);
				break;

		}

	}

	/**
	 * @return array
	 */
	function t3tool_registry_cmdaliases() {
		return array(
			'rget' => 'registry get',
			'vget' => 'registry get',
			'rset' => 'registry set',
			'vset' => 'registry set',
		);
	}

	function t3tool_registry_usage_short() {
		return ("Registry commands:
  t3tool registry list
    List all registry entries
  t3tool registry get [<namespace>] <key>
    Show a single registry entry
  t3tool registry set <namespace> <key> <value>

        ");

	}

	/**
	 * @return array
	 */
	function t3tool_registry_completion() {
		return array(
			'registry' => array(
				'get' => 't3tool_registry_completion_keys',
				'list' => 1,
				'set' => 1,
			),

		);

	}

	/**
	 * @return array
	 */
	function t3tool_registry_completion_namespaces () {
		return sql_get_column("select entry_namespace from sys_registry group by entry_namespace");
	}

	/**
	 * @return array
	 */
	function t3tool_registry_completion_keys() {
		return sql_get_column("select entry_key from sys_registry group by entry_key");
	}